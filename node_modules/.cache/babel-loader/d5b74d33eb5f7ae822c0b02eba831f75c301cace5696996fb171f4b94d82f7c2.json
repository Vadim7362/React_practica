{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/DEVELOPER/\\u0423\\u0447\\u0435\\u0431\\u0430/React/react_app/src/pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  });\n  console.log(params);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u043F\\u043E\\u0441\\u0442\\u0430 \\u0441 ID = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PostIdPage, \"YY7e0nMW8z+3qDO6UIfV3npYIHs=\", false, function () {\n  return [useParams, useFetching];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useFetching","PostService","Loader","PostIdPage","params","post","setPost","fetchPostById","isLoading","error","id","response","getById","data","console","log","title"],"sources":["/Users/user/Desktop/DEVELOPER/Учеба/React/react_app/src/pages/PostIdPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\n\nconst PostIdPage = () => {\n  const params = useParams()\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching( async (id) => {\n    const response = await PostService.getById(id)\n    setPost(response.data);\n  })\n\n  useEffect(() => {\n    fetchPostById(params.id)\n  })\n\n  console.log(params)\n  return (\n    <div>\n      <h1>Вы открыли страницу поста с ID = {params.id}</h1>\n      {isLoading\n        ? <Loader />\n        : <div>{post.id}. {post.title}</div>\n      }\n      \n    </div>\n  )\n}\n\nexport default PostIdPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,gCAAgC;AAAC;AAGpD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,MAAM,GAAGL,SAAS,EAAE;EAC1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGT,WAAW,CAAE,MAAOU,EAAE,IAAK;IACnE,MAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACW,OAAO,CAACF,EAAE,CAAC;IAC9CJ,OAAO,CAACK,QAAQ,CAACE,IAAI,CAAC;EACxB,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACdU,aAAa,CAACH,MAAM,CAACM,EAAE,CAAC;EAC1B,CAAC,CAAC;EAEFI,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;EACnB,oBACE;IAAA,wBACE;MAAA,WAAI,sJAAiC,EAACA,MAAM,CAACM,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EACpDF,SAAS,gBACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,gBACV;MAAA,WAAMH,IAAI,CAACK,EAAE,EAAC,IAAE,EAACL,IAAI,CAACW,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAGlC;AAEV,CAAC;AAAA,GAvBKb,UAAU;EAAA,QACCJ,SAAS,EAEkBC,WAAW;AAAA;AAAA,KAHjDG,UAAU;AAyBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}