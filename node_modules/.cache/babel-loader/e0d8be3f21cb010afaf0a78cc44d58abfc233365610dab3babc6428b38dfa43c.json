{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/DEVELOPER/\\u0423\\u0447\\u0435\\u0431\\u0430/React/react_app/src/pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState({});\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u043F\\u043E\\u0441\\u0442\\u0430 \\u0441 ID = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PostIdPage, \"fuUytO9RMmx5qscrtzwg81WPmh0=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useFetching","PostService","Loader","PostIdPage","params","post","setPost","comments","setComments","fetchPostById","isLoading","error","id","response","getById","data","fetchComments","isComLoading","comError","getCommentsByPostId","title"],"sources":["/Users/user/Desktop/DEVELOPER/Учеба/React/react_app/src/pages/PostIdPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\n\nconst PostIdPage = () => {\n  const params = useParams()\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState({});\n  const [fetchPostById, isLoading, error] = useFetching( async (id) => {\n    const response = await PostService.getById(id)\n    setPost(response.data);\n  })\n\n  const [fetchComments, isComLoading, comError] = useFetching( async (id) => {\n    const response = await PostService.getCommentsByPostId(id)\n    setPost(response.data);\n  })\n\n  useEffect(() => {\n    fetchPostById(params.id)\n  }, [])\n\n  return (\n    <div>\n      <h1>Вы открыли страницу поста с ID = {params.id}</h1>\n      {isLoading\n        ? <Loader/>\n        : <div>{post.id}. {post.title}</div>\n      }\n      <h1>Комментарии</h1>\n    </div>\n  )\n}\n\nexport default PostIdPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,gCAAgC;AAAC;AAGpD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,MAAM,GAAGL,SAAS,EAAE;EAC1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGX,WAAW,CAAE,MAAOY,EAAE,IAAK;IACnE,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,OAAO,CAACF,EAAE,CAAC;IAC9CN,OAAO,CAACO,QAAQ,CAACE,IAAI,CAAC;EACxB,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,YAAY,EAAEC,QAAQ,CAAC,GAAGlB,WAAW,CAAE,MAAOY,EAAE,IAAK;IACzE,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACkB,mBAAmB,CAACP,EAAE,CAAC;IAC1DN,OAAO,CAACO,QAAQ,CAACE,IAAI,CAAC;EACxB,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACdY,aAAa,CAACL,MAAM,CAACQ,EAAE,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA,WAAI,sJAAiC,EAACR,MAAM,CAACQ,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EACpDF,SAAS,gBACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,gBACT;MAAA,WAAML,IAAI,CAACO,EAAE,EAAC,IAAE,EAACP,IAAI,CAACe,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAEtC;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEV,CAAC;AAAA,GA5BKjB,UAAU;EAAA,QACCJ,SAAS,EAGkBC,WAAW,EAKLA,WAAW;AAAA;AAAA,KATvDG,UAAU;AA8BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}