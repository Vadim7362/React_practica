{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  _s();\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    let cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(ref.current);\n  }, [isLoading]);\n};\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"names":["useEffect","useRef","useObserver","ref","canLoad","isLoading","callback","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"sources":["/Users/user/Desktop/DEVELOPER/Учеба/React/react_app/src/hooks/useObserver.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  const observer = useRef();\n  useEffect(() => {\n    if(isLoading) return;\n    if(observer.current) observer.current.disconnect();\n    let cb = function(entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback()\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(ref.current)\n  }, [isLoading])\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAAA;EAChE,MAAMC,QAAQ,GAAGN,MAAM,EAAE;EACzBD,SAAS,CAAC,MAAM;IACd,IAAGK,SAAS,EAAE;IACd,IAAGE,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACC,OAAO,CAACC,UAAU,EAAE;IAClD,IAAIC,EAAE,GAAG,UAASC,OAAO,EAAEJ,QAAQ,EAAE;MACnC,IAAII,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIR,OAAO,EAAE;QACxCE,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,QAAQ,CAACC,OAAO,GAAG,IAAIK,oBAAoB,CAACP,QAAQ,CAAC;IACrDC,QAAQ,CAACC,OAAO,CAACM,OAAO,CAACX,GAAG,CAACK,OAAO,CAAC;EACvC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;AACjB,CAAC;AAAA,GAbYH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}